<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hohai.component.system.mapper.SysMenuMapper">
    <resultMap id="SysMenuResult" type="SysMenu">
        <id     property="menuId"         column="menu_id"        />
        <result property="menuName"       column="menu_name"      />
        <result property="menuPid"        column="menu_pid"       />
        <result property="url"            column="url"            />
        <result property="sort"           column="sort"           />
        <result property="perms"          column="perms"          />
        <result property="isLink"         column="is_link"        />
        <result property="menuType"       column="menu_type"      />
        <result property="icon"           column="icon"           />
        <result property="status"         column="status"         />
        <result property="createBy"       column="create_by"      />
        <result property="createTime"     column="create_time"    />
        <result property="updateTime"     column="update_time"    />
        <result property="updateBy"       column="update_by"      />
        <result property="remark"         column="remark"         />
    </resultMap>


    <sql id="selectMenuVo">
        select menu_id, menu_name, menu_pid, url, sort, perms, is_link, menu_type, icon, status, create_time
        from sys_menu
    </sql>

    <insert id="insertMenu" parameterType="SysMenu">
        insert into sys_menu(
        <if test="menuId != null and menuId != 0">menu_id,</if>
        <if test="menuName != null and menuName != ''">menu_name,</if>
        <if test="menuPid != null and menuPid != 0">menu_pid,</if>
        <if test="url != null and url != ''">url,</if>
        <if test="sort != null and sort != ''">sort,</if>
        <if test="perms !=null and perms != ''">perms,</if>
        <if test="isLink != null and isLink != ''">is_link,</if>
        <if test="menuType != null and menuType != ''">menu_type,</if>
        <if test="icon != null and icon != ''">icon,</if>
        <if test="status != null">status,</if>
        <if test="remark != null and remark != ''">remark,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        create_time
        )values(
        <if test="menuId != null and menuId != 0">#{menuId},</if>
        <if test="menuName != null and menuName != ''">#{menuName},</if>
        <if test="menuPid != null and menuPid != 0">#{menuPid},</if>
        <if test="url != null and url != ''">#{url},</if>
        <if test="sort != null and sort != ''">#{sort},</if>
        <if test="perms !=null and perms != ''">#{perms},</if>
        <if test="isLink != null and isLink != ''">#{isLink},</if>
        <if test="menuType != null and menuType != ''">#{menuType},</if>
        <if test="icon != null and icon != ''">#{icon},</if>
        <if test="status != null">#{status},</if>
        <if test="remark != null and remark != ''">#{remark},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        sysdate()
        )
    </insert>

    <delete id="deleteMenuById" parameterType="Long">
        delete from sys_menu where menu_id = #{menuId}
    </delete>

    <update id="updateMenu" parameterType="SysMenu">
        update sys_menu
        <set>
            <if test="menuName != null and menuName != ''">menu_name = #{menuName},</if>
            <if test="menuPid != null">menu_pid = #{menuPid},</if>
            <if test="url != null and url != ''">url = #{url},</if>
            <if test="sort != null and sort != ''">sort = #{sort},</if>
            <if test="isLink != null and isLink != ''">is_link = #{isLink},</if>
            <if test="perms !=null">perms = #{perms},</if>
            <if test="menuType != null and menuType != ''">menu_type = #{menuType},</if>
            <if test="status != null">status = #{status},</if>
            <if test="icon !=null and icon != ''">icon = #{icon},</if>
            <if test="remark != null and remark != ''">remark = #{remark},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate()
        </set>
        where menu_id = #{menuId}
    </update>

    <select id="selectMenuList" parameterType="com.hohai.component.system.entity.SysMenu" resultMap="SysMenuResult">
        <include refid="selectMenuVo"/>
        <where>
            <if test="menuName != null and menuName != ''">
                AND menu_name like concat('%', #{menuName}, '%')
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
        </where>
        order by menu_pid, sort
    </select>

    <select id="selectMenuTreeAll" resultMap="SysMenuResult">
        select distinct m.menu_id, m.menu_pid, m.menu_name, m.url, m.status, ifnull(m.perms,'') as perms, m.is_link, m.menu_type, m.icon, m.sort, m.create_time
        from sys_menu m where m.menu_type in ('M', 'C') and m.status = 0
        order by m.menu_pid, m.sort
    </select>

    <select id="selectMenuListByUserId" parameterType="SysMenu" resultMap="SysMenuResult">
        select distinct m.menu_id, m.menu_pid, m.menu_name, m.url, m.status, ifnull(m.perms,'') as perms, m.is_link, m.menu_type, m.icon, m.sort, m.create_time
        from sys_menu m
        left join sys_role_menu rm on m.menu_id = rm.menu_id
        left join sys_user_role ur on rm.role_id = ur.role_id
        left join sys_role ro on ur.role_id = ro.role_id
        where ur.user_id = #{params.userId}
        <if test="menuName != null and menuName != ''">
            AND m.menu_name like concat('%', #{menuName}, '%')
        </if>
        <if test="status != null and status != ''">
            AND m.status = #{status}
        </if>
        order by m.menu_pid, m.sort
    </select>

    <select id="selectMenuTreeByUserId" parameterType="Long" resultMap="SysMenuResult">
        select distinct m.menu_id, m.menu_pid, m.menu_name, m.url, m.status, ifnull(m.perms,'') as perms, m.is_link, m.menu_type, m.icon, m.sort, m.create_time
        from sys_menu m
                 left join sys_role_menu rm on m.menu_id = rm.menu_id
                 left join sys_user_role ur on rm.role_id = ur.role_id
                 left join sys_role ro on ur.role_id = ro.role_id
                 left join sys_user u on ur.user_id = u.user_id
        where u.user_id = #{userId} and m.menu_type in ('M', 'C') and m.status = 0  AND ro.status = 0
        order by m.menu_pid, m.sort
    </select>

    <select id="selectMenuListByRoleId" resultType="Long">
        select m.menu_id
        from sys_menu m
        left join sys_role_menu rm on m.menu_id = rm.menu_id
        where rm.role_id = #{roleId}
        <if test="menuCheckStrictly">
            and m.menu_id not in (select m.menu_pid from sys_menu m inner join sys_role_menu rm on m.menu_id = rm.menu_id and rm.role_id = #{roleId})
        </if>
        order by m.menu_pid, m.sort
    </select>

    <select id="selectMenuPerms" resultType="String">
        select distinct m.perms
        from sys_menu m
                 left join sys_role_menu rm on m.menu_id = rm.menu_id
                 left join sys_user_role ur on rm.role_id = ur.role_id
    </select>

    <select id="selectMenuPermsByUserId" parameterType="Long" resultType="String">
        select distinct m.perms
        from sys_menu m
                 left join sys_role_menu rm on m.menu_id = rm.menu_id
                 left join sys_user_role ur on rm.role_id = ur.role_id
                 left join sys_role r on r.role_id = ur.role_id
        where m.status = '0' and r.status = '0' and ur.user_id = #{userId}
    </select>

    <select id="selectMenuById" parameterType="Long" resultMap="SysMenuResult">
        <include refid="selectMenuVo"/>
        where menu_id = #{menuId}
    </select>

    <select id="hasChildByMenuId" resultType="Integer">
        select count(1) from sys_menu where menu_pid = #{menuPid}
    </select>

    <select id="checkMenuNameUnique" parameterType="SysMenu" resultMap="SysMenuResult">
        <include refid="selectMenuVo"/>
        where menu_name=#{menuName} and menu_pid = #{menuPid} limit 1
    </select>
</mapper>
